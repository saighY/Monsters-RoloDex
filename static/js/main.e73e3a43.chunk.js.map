{"version":3,"sources":["components/card/card-component.js","components/card-list/card-list-component.js","components/search-box/search-box-component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","placeholder","handleChange","type","onChange","App","handleSearchTextChange","e","setState","searchBox","target","value","state","fetch","then","Response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFjBC,G,MAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNtBM,G,MAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAClC,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCsCxEG,E,kDArCX,aAAe,IAAD,8BACV,gBAeJC,uBAAyB,SAACC,GACtB,EAAKC,SAAS,CAAEC,UAAWF,EAAEG,OAAOC,SAfpC,EAAKC,MAAQ,CACTd,SAAU,GACVW,UAAW,IAJL,E,qDAUd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAOlD,WAAU,IAAD,EAC2BC,KAAKN,MAA7Bd,EADH,EACGA,SAAUW,EADb,EACaA,UAEZU,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACrCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAUY,kBAGlD,OACI,sBAAK/B,UAAU,MAAf,UACI,oDACA,cAAC,EAAD,CAAQW,YAAY,kBAAkBC,aAAcgB,KAAKZ,yBACzD,cAAC,EAAD,CAAUR,SAAUqB,W,GAhClBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e73e3a43.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n            <h1>{props.monster.name}</h1>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport { Card } from '../card/card-component.js';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const Search = ({ placeholder, handleChange }) => {\r\n    return <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />;\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list-component';\nimport { Search } from './components/search-box/search-box-component';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchBox: '',\n        };\n\n        // this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then((Response) => Response.json())\n            .then((user) => this.setState({ monsters: user }));\n    }\n\n    handleSearchTextChange = (e) => {\n        this.setState({ searchBox: e.target.value });\n    };\n\n    render() {\n        const { monsters, searchBox } = this.state;\n\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.name.toLowerCase().includes(searchBox.toLowerCase()),\n        );\n\n        return (\n            <div className=\"App\">\n                <h1> Monsters RoloDex </h1>\n                <Search placeholder=\"Search Monsters\" handleChange={this.handleSearchTextChange} />\n                <CardList monsters={filteredMonsters}></CardList>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}